/**
 * Shared file between builds so that they can all use the same dependencies and repositories.
 **/
ext.deps = [:]

def versions = [:]
versions.android_gradle_plugin = '3.4.1'
versions.arch_core = '2.0.1'
versions.apache = '2.6'
versions.benchmark = '1.0.0-alpha02'
versions.code_quality_tools = '0.18.0'
versions.constraint_layout = '1.1.3'
versions.core_ktx = '1.0.2'
versions.dagger = '2.23.1'
versions.espresso = '3.2.0'
versions.exoplayer = '2.10.1'
versions.fragment = "1.1.0-alpha09"
versions.glide = '4.9.0'
versions.glide_palette = '2.1.2'
versions.gradle_versions_plugin = '0.21.0'
versions.jacoco_gradle_plugin = '0.8.1'
versions.json = '20180813'
versions.junit = '4.12'
versions.junit_android = '1.1.1'
versions.junit5_gradle_plugin = '1.4.2.0'
versions.junit5_android_test = '1.0.0'
versions.jupiter = '5.4.2'
versions.kotlin = '1.3.31'
versions.leak_canary = '2.0-alpha-2'
versions.leak_canary_no_op = '1.6.3'
versions.lifecycle = "2.0.0"
versions.mockito = '2.28.2'
versions.mockito_kotlin = '2.1.0'
versions.mockito_server = '3.14.2'
versions.multidex = '2.0.1'
versions.navigation = '2.1.0-alpha05'
versions.okhttp = '3.14.2'
versions.okhttp_logging_interceptor = '3.14.2'
versions.paging = "2.1.0"
versions.retrofit = '2.5.0'
versions.robolectric = '4.3'
versions.room = '2.1.0'
versions.rx_java = '2.2.9'
versions.rx_android = '2.1.1'
versions.rx_binding = '3.0.0-alpha2'
versions.support_appcompat = '1.0.2'
versions.support = '1.0.0'
versions.testing = "1.2.0"
versions.timber = '4.7.1'
ext.versions = versions

deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
//deps.apache_commons = "group: 'commons-io', name: 'commons-io', version: '$versions.apache'"
deps.benchmark = "androidx.benchmark:benchmark:$versions.benchmark"
deps.benchmark_gradle_plugin = "androidx.benchmark:benchmark-gradle-plugin:$versions.benchmark"
deps.code_quality_tools = "com.vanniktech:gradle-code-quality-tools-plugin:$versions.code_quality_tools"
deps.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
deps.gradle_versions_plugin = "com.github.ben-manes:gradle-versions-plugin:$versions.gradle_versions_plugin"
deps.jacoco_gradle_plugin = "org.jacoco:org.jacoco.core:$versions.jacoco_gradle_plugin"
deps.json = "org.json:json:$versions.json"
deps.junit5_gradle_plugin = "de.mannodermaus.gradle.plugins:android-junit5:$versions.junit5_gradle_plugin"
deps.multidex = "androidx.multidex:multidex:$versions.multidex"
deps.navigation_gradle_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.paging_ktx = "androidx.paging:paging-runtime-ktx:$versions.paging"
deps.robolectric = "org.robolectric:robolectric:$versions.robolectric"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
deps.kotlin = kotlin

def support = [:]
support.annotations = "androidx.annotation:annotation:$versions.support"
support.app_compat = "androidx.appcompat:appcompat:$versions.support_appcompat"
support.v4 = "androidx.legacy:legacy-support-v4:$versions.support"
support.core_utils = "androidx.legacy:legacy-support-core-utils:$versions.support"
support.core_ktx = "androidx.core:core-ktx:$versions.core_ktx"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.support"
support.cardview = "androidx.cardview:cardview:$versions.support"
support.design = "com.google.android.material:material:$versions.support"
support.fragment_runtime = "androidx.fragment:fragment:${versions.fragment}"
support.fragment_runtime_ktx = "androidx.fragment:fragment-ktx:${versions.fragment}"
support.fragment_testing = "androidx.fragment:fragment-testing:${versions.fragment}"
deps.support = support

def navigation = [:]
navigation.fragment = "androidx.navigation:navigation-fragment:$versions.navigation"
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.runtime = "androidx.navigation:navigation-runtime:$versions.navigation"
navigation.runtime_ktx = "androidx.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.ui = "androidx.navigation:navigation-ui:$versions.navigation"
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
navigation.safe_args_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.navigation = navigation

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
lifecycle.reactive_steams = "androidx.lifecycle:lifecycle-reactivestreams:$versions.lifecycle"
deps.lifecycle = lifecycle

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
retrofit.rxjava = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
retrofit.okhttp = "com.squareup.okhttp3:okhttp:$versions.okhttp"
retrofit.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"
deps.retrofit = retrofit

def rx = [:]
rx.java = "io.reactivex.rxjava2:rxjava:$versions.rx_java"
rx.android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
rx.binding = "com.jakewharton.rxbinding3:rxbinding:$versions.rx_binding"
rx.binding_core = "com.jakewharton.rxbinding3:rxbinding-core:$versions.rx_binding"
rx.binding_app_compat = "com.jakewharton.rxbinding3:rxbinding-appcompat:$versions.rx_binding"
deps.rx = rx

def exoplayer = [:]
exoplayer.core = "com.google.android.exoplayer:exoplayer:$versions.exoplayer"
deps.exoplayer = exoplayer

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
glide.palette = "com.github.florent37:glidepalette:$versions.glide_palette"
deps.glide = glide

def leak_canary = [:]
leak_canary.android = "com.squareup.leakcanary:leakcanary-android:$versions.leak_canary"
leak_canary.no_op = "com.squareup.leakcanary:leakcanary-android-no-op:$versions.leak_canary_no_op"
deps.leak_canary = leak_canary

def arch_core = [:]
arch_core.runtime = "androidx.arch.core:core-runtime:$versions.arch_core"
arch_core.testing = "androidx.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def junit = [:]
junit.main = "junit:junit:$versions.junit"
junit.android_ext = "androidx.test.ext:junit:$versions.junit_android"
deps.junit = junit

def jupiter = [:]
jupiter.api = "org.junit.jupiter:junit-jupiter-api:$versions.jupiter"
jupiter.engine = "org.junit.jupiter:junit-jupiter-engine:$versions.jupiter"
jupiter.params = "org.junit.jupiter:junit-jupiter-params:$versions.jupiter"
jupiter.android_core = "de.mannodermaus.junit5:android-test-core:$versions.junit5_android_test"
jupiter.android_runner = "de.mannodermaus.junit5:android-test-runner:$versions.junit5_android_test"
deps.jupiter = jupiter

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.rules = "androidx.test:rules:$versions.testing"
espresso.runner = "androidx.test:runner:$versions.testing"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.android = "org.mockito:mockito-android:$versions.mockito"
mockito.kotlin = "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockito_kotlin"
mockito.webserver = "com.squareup.okhttp3:mockwebserver:$versions.mockito_server"
deps.mockito = mockito

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    handler.gradlePluginPortal()
}

ext.addRepos = this.&addRepos